

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 23 19:11:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4331
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4331 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   000422                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for FSM_begin@F2863
    80   000422  0002               	dw	2
    81   000424  F0                 	db	low _Watering_Done_cb
    82   000425  03                 	db	high _Watering_Done_cb
    83   000426  00                 	db	0
    84   000427  00                 	db	0
    85   000428  00                 	db	0
    86   000429  00                 	db	0
    87                           
    88                           ;initializer for FSM_begin@F2860
    89   00042A  0001               	dw	1
    90   00042C  D4                 	db	low _Check_Moisture_cb
    91   00042D  03                 	db	high _Check_Moisture_cb
    92   00042E  00                 	db	0
    93   00042F  00                 	db	0
    94   000430  00                 	db	0
    95   000431  00                 	db	0
    96   000000                     _ADRESL	set	4035
    97   000000                     _ADRESH	set	4036
    98                           
    99                           	psect	nvCOMRAM
   100   00003C                     __pnvCOMRAM:
   101                           	callstack 0
   102   00003C                     _FSM_state:
   103                           	callstack 0
   104   00003C                     	ds	1
   105   000000                     _LATC	set	3979
   106   000000                     _TRISC	set	3988
   107   000000                     _ADCHSbits	set	3993
   108   000000                     _ADCON1bits	set	4033
   109   000000                     _ADCON0bits	set	4034
   110   000000                     _ANSEL0bits	set	4024
   111   000000                     _ADCON2bits	set	4032
   112   000000                     _RCONbits	set	4048
   113   000000                     _OSCCONbits	set	4051
   114   000000                     _T0CONbits	set	4053
   115   000000                     _TMR0L	set	4054
   116   000000                     _INTCONbits	set	4082
   117   000000                     _INTCON2bits	set	4081
   118   000000                     _TMR0H	set	4055
   119   000000                     _TRISD	set	3989
   120   000000                     _LATD	set	3980
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   000336                     __pcinit:
   126                           	callstack 0
   127   000336                     start_initialization:
   128                           	callstack 0
   129   000336                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (16 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   000336  0E22               	movlw	low __pidataCOMRAM
   135   000338  6EF6               	movwf	tblptrl,c
   136   00033A  0E04               	movlw	high __pidataCOMRAM
   137   00033C  6EF7               	movwf	tblptrh,c
   138   00033E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   000340  6EF8               	movwf	tblptru,c
   140   000342  EE00  F027         	lfsr	0,__pdataCOMRAM
   141   000346  EE10 F010          	lfsr	1,16
   142   00034A                     copy_data0:
   143   00034A  0009               	tblrd		*+
   144   00034C  CFF5 FFEE          	movff	tablat,postinc0
   145   000350  50E5               	movf	postdec1,w,c
   146   000352  50E1               	movf	fsr1l,w,c
   147   000354  E1FA               	bnz	copy_data0
   148                           
   149                           ; Clear objects allocated to BANK0 (40 bytes)
   150   000356  EE00  F060         	lfsr	0,__pbssBANK0
   151   00035A  0E28               	movlw	40
   152   00035C                     clear_0:
   153   00035C  6AEE               	clrf	postinc0,c
   154   00035E  06E8               	decf	wreg,f,c
   155   000360  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (5 bytes)
   158   000362  6A3B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   159   000364  6A3A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   160   000366  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
   161   000368  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162   00036A  6A37               	clrf	__pbssCOMRAM& (0+255),c
   163   00036C                     end_of_initialization:
   164                           	callstack 0
   165   00036C                     __end_of__initialization:
   166                           	callstack 0
   167   00036C  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   168   00036E  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   169   000370  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170   000372  6EF8               	movwf	tblptru,c
   171   000374  0100               	movlb	0
   172   000376  EFD5  F001         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175   000037                     __pbssCOMRAM:
   176                           	callstack 0
   177   000037                     _tmr0Counter:
   178                           	callstack 0
   179   000037                     	ds	2
   180   000039                     _ADC:
   181                           	callstack 0
   182   000039                     	ds	2
   183   00003B                     _callback_count:
   184                           	callstack 0
   185   00003B                     	ds	1
   186                           
   187                           	psect	dataCOMRAM
   188   000027                     __pdataCOMRAM:
   189                           	callstack 0
   190   000027                     FSM_begin@F2863:
   191                           	callstack 0
   192   000027                     	ds	8
   193   00002F                     FSM_begin@F2860:
   194                           	callstack 0
   195   00002F                     	ds	8
   196                           
   197                           	psect	bssBANK0
   198   000060                     __pbssBANK0:
   199                           	callstack 0
   200   000060                     _registered_callbacks:
   201                           	callstack 0
   202   000060                     	ds	40
   203                           
   204                           	psect	cstackCOMRAM
   205   000001                     __pcstackCOMRAM:
   206                           	callstack 0
   207   000001                     i2set_state@state_to_set:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x0
   211   000001                     	ds	1
   212   000002                     
   213                           ; 1 bytes @ 0x1
   214   000002                     	ds	4
   215   000006                     Callbacks_Manager@callbacks:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x5
   219   000006                     	ds	1
   220   000007                     ??_timer_overflow_isr:
   221                           
   222                           ; 1 bytes @ 0x6
   223   000007                     	ds	8
   224   00000F                     ??_init_leds:
   225   00000F                     set_state@state_to_set:
   226                           	callstack 0
   227   00000F                     Callbacks_Init@callback:
   228                           	callstack 0
   229   00000F                     Reset_Counter@config:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0xE
   233   00000F                     	ds	2
   234   000011                     Register_Callback@config:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x10
   238   000011                     	ds	2
   239   000013                     
   240                           ; 1 bytes @ 0x12
   241   000013                     	ds	2
   242   000015                     ??_FSM_begin:
   243                           
   244                           ; 1 bytes @ 0x14
   245   000015                     	ds	2
   246   000017                     FSM_begin@MoistureCB_Config:
   247                           	callstack 0
   248                           
   249                           ; 8 bytes @ 0x16
   250   000017                     	ds	8
   251   00001F                     FSM_begin@WateringDoneCB_Config:
   252                           	callstack 0
   253                           
   254                           ; 8 bytes @ 0x1E
   255   00001F                     	ds	8
   256   000027                     
   257                           ; 1 bytes @ 0x26
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 15 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   277 ;;      Params:         0       0       0       0
   278 ;;      Locals:         0       0       0       0
   279 ;;      Temps:          0       0       0       0
   280 ;;      Totals:         0       0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels required when called: 7
   283 ;; This function calls:
   284 ;;		_FSM_begin
   285 ;;		_Timer0_init
   286 ;;		_Timer0_stop
   287 ;;		_set_state
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294   0003AA                     __ptext0:
   295                           	callstack 0
   296   0003AA                     _main:
   297                           	callstack 24
   298   0003AA                     
   299                           ;main.c: 18:     OSCCONbits.IRCF0 = 1;
   300   0003AA  88D3               	bsf	211,4,c	;volatile
   301                           
   302                           ;main.c: 19:     OSCCONbits.IRCF1 = 1;
   303   0003AC  8AD3               	bsf	211,5,c	;volatile
   304                           
   305                           ;main.c: 20:     OSCCONbits.IRCF2 = 1;
   306   0003AE  8CD3               	bsf	211,6,c	;volatile
   307   0003B0                     
   308                           ;main.c: 23:     Timer0_stop();
   309   0003B0  EC37  F002         	call	_Timer0_stop	;wreg free
   310   0003B4                     
   311                           ;main.c: 26:     RCONbits.IPEN = 1;
   312   0003B4  8ED0               	bsf	208,7,c	;volatile
   313   0003B6                     
   314                           ;main.c: 29:     INTCONbits.TMR0IE = 1;
   315   0003B6  8AF2               	bsf	242,5,c	;volatile
   316   0003B8                     
   317                           ;main.c: 32:     INTCON2bits.TMR0IP = 1;
   318   0003B8  84F1               	bsf	241,2,c	;volatile
   319                           
   320                           ;main.c: 35:     Timer0_init();
   321   0003BA  EC19  F002         	call	_Timer0_init	;wreg free
   322   0003BE                     
   323                           ;main.c: 38:     INTCONbits.GIEH = 1;
   324   0003BE  8EF2               	bsf	242,7,c	;volatile
   325   0003C0                     
   326                           ;main.c: 39:     INTCONbits.GIEL = 1;
   327   0003C0  8CF2               	bsf	242,6,c	;volatile
   328   0003C2                     
   329                           ;main.c: 41:     set_state(INIT_STATE);
   330   0003C2  0E00               	movlw	0
   331   0003C4  EC2F  F002         	call	_set_state
   332   0003C8                     l1265:
   333                           
   334                           ;main.c: 43:     {;main.c: 44:      FSM_begin();
   335   0003C8  EC4D  F000         	call	_FSM_begin	;wreg free
   336   0003CC  EFE4  F001         	goto	l1265
   337   0003D0  EF4B  F000         	goto	start
   338   0003D4                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _Timer0_stop *****************
   342 ;; Defined at:
   343 ;;		line 89 in file "PIC18F4331_Timer.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		None
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   357 ;;      Params:         0       0       0       0
   358 ;;      Locals:         0       0       0       0
   359 ;;      Temps:          0       0       0       0
   360 ;;      Totals:         0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 4
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text1
   372   00046E                     __ptext1:
   373                           	callstack 0
   374   00046E                     _Timer0_stop:
   375                           	callstack 26
   376   00046E                     
   377                           ;PIC18F4331_Timer.c: 91:     T0CONbits.TMR0ON = 0;
   378   00046E  9ED5               	bcf	213,7,c	;volatile
   379   000470  0012               	return		;funcret
   380   000472                     __end_of_Timer0_stop:
   381                           	callstack 0
   382                           
   383 ;; *************** function _Timer0_init *****************
   384 ;; Defined at:
   385 ;;		line 56 in file "PIC18F4331_Timer.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		None
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   399 ;;      Params:         0       0       0       0
   400 ;;      Locals:         0       0       0       0
   401 ;;      Temps:          0       0       0       0
   402 ;;      Totals:         0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 4
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text2
   414   000432                     __ptext2:
   415                           	callstack 0
   416   000432                     _Timer0_init:
   417                           	callstack 26
   418   000432                     
   419                           ;PIC18F4331_Timer.c: 67:     T0CONbits.T0PS0 = 1;
   420   000432  80D5               	bsf	213,0,c	;volatile
   421                           
   422                           ;PIC18F4331_Timer.c: 68:     T0CONbits.T0PS1 = 1;
   423   000434  82D5               	bsf	213,1,c	;volatile
   424                           
   425                           ;PIC18F4331_Timer.c: 69:     T0CONbits.T0PS2 = 1;
   426   000436  84D5               	bsf	213,2,c	;volatile
   427                           
   428                           ;PIC18F4331_Timer.c: 72:     T0CONbits.PSA = 0;
   429   000438  96D5               	bcf	213,3,c	;volatile
   430                           
   431                           ;PIC18F4331_Timer.c: 75:     T0CONbits.T0CS = 0;
   432   00043A  9AD5               	bcf	213,5,c	;volatile
   433                           
   434                           ;PIC18F4331_Timer.c: 78:     T0CONbits.T016BIT = 0;
   435   00043C  9CD5               	bcf	213,6,c	;volatile
   436   00043E  0012               	return		;funcret
   437   000440                     __end_of_Timer0_init:
   438                           	callstack 0
   439                           
   440 ;; *************** function _FSM_begin *****************
   441 ;; Defined at:
   442 ;;		line 28 in file "System_FSM.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  WateringDone    8   30[COMRAM] struct .
   447 ;;  MoistureCB_C    8   22[COMRAM] struct .
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   457 ;;      Params:         0       0       0       0
   458 ;;      Locals:        16       0       0       0
   459 ;;      Temps:          2       0       0       0
   460 ;;      Totals:        18       0       0       0
   461 ;;Total ram usage:       18 bytes
   462 ;; Hardware stack levels used: 1
   463 ;; Hardware stack levels required when called: 6
   464 ;; This function calls:
   465 ;;		_Callbacks_Init
   466 ;;		_Register_Callback
   467 ;;		_Timer0_start
   468 ;;		_checking_moisture_status_led
   469 ;;		_get_current_state
   470 ;;		_idle_status_led
   471 ;;		_init_leds
   472 ;;		_set_state
   473 ;;		_watering_status_led
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text3
   480   00009A                     __ptext3:
   481                           	callstack 0
   482   00009A                     _FSM_begin:
   483                           	callstack 24
   484   00009A                     
   485                           ;System_FSM.c: 30:     switch(get_current_state())
   486   00009A  EFB5  F000         	goto	l1221
   487   00009E                     l1185:
   488                           
   489                           ;System_FSM.c: 33:         {;System_FSM.c: 36:             Callbacks_Init();
   490   00009E  EC75  F001         	call	_Callbacks_Init	;wreg free
   491   0000A2                     
   492                           ;System_FSM.c: 38:             Callback_Config_t MoistureCB_Config =
   493   0000A2  EE20  F02F         	lfsr	2,FSM_begin@F2860
   494   0000A6  EE10  F017         	lfsr	1,FSM_begin@MoistureCB_Config
   495   0000AA  0E07               	movlw	7
   496   0000AC                     u361:
   497   0000AC  CFDB FFE3          	movff	plusw2,plusw1
   498   0000B0  06E8               	decf	wreg,f,c
   499   0000B2  E2FC               	bc	u361
   500   0000B4                     
   501                           ;System_FSM.c: 44:             Callback_Config_t WateringDoneCB_Config =
   502   0000B4  EE20  F027         	lfsr	2,FSM_begin@F2863
   503   0000B8  EE10  F01F         	lfsr	1,FSM_begin@WateringDoneCB_Config
   504   0000BC  0E07               	movlw	7
   505   0000BE                     u371:
   506   0000BE  CFDB FFE3          	movff	plusw2,plusw1
   507   0000C2  06E8               	decf	wreg,f,c
   508   0000C4  E2FC               	bc	u371
   509   0000C6                     
   510                           ;System_FSM.c: 50:             Register_Callback(&MoistureCB_Config);
   511   0000C6  0E17               	movlw	low FSM_begin@MoistureCB_Config
   512   0000C8  6E11               	movwf	Register_Callback@config^0,c
   513   0000CA  0E00               	movlw	high FSM_begin@MoistureCB_Config
   514   0000CC  6E12               	movwf	(Register_Callback@config+1)^0,c
   515   0000CE  EC38  F001         	call	_Register_Callback	;wreg free
   516   0000D2                     
   517                           ;System_FSM.c: 51:             Register_Callback(&WateringDoneCB_Config);
   518   0000D2  0E1F               	movlw	low FSM_begin@WateringDoneCB_Config
   519   0000D4  6E11               	movwf	Register_Callback@config^0,c
   520   0000D6  0E00               	movlw	high FSM_begin@WateringDoneCB_Config
   521   0000D8  6E12               	movwf	(Register_Callback@config+1)^0,c
   522   0000DA  EC38  F001         	call	_Register_Callback	;wreg free
   523   0000DE                     
   524                           ;System_FSM.c: 53:             init_leds();
   525   0000DE  ECBD  F001         	call	_init_leds	;wreg free
   526   0000E2                     
   527                           ;System_FSM.c: 54:             Timer0_start();
   528   0000E2  EC3B  F002         	call	_Timer0_start	;wreg free
   529   0000E6                     
   530                           ;System_FSM.c: 55:             set_state(IDLE_STATE);
   531   0000E6  0E01               	movlw	1
   532   0000E8  EC2F  F002         	call	_set_state
   533                           
   534                           ;System_FSM.c: 57:             break;
   535   0000EC  EFD3  F000         	goto	l161
   536   0000F0                     l1201:
   537                           
   538                           ;System_FSM.c: 63:             {;System_FSM.c: 65:                 idle_status_led();
   539   0000F0  EC25  F002         	call	_idle_status_led	;wreg free
   540   0000F4                     l1203:
   541                           
   542                           ;System_FSM.c: 62:             while(get_current_state() == IDLE_STATE)
   543   0000F4  EC39  F002         	call	_get_current_state	;wreg free
   544   0000F8  06E8               	decf	wreg,f,c
   545   0000FA  B4D8               	btfsc	status,2,c
   546   0000FC  EF82  F000         	goto	u381
   547   000100  EF84  F000         	goto	u380
   548   000104                     u381:
   549   000104  EF78  F000         	goto	l1201
   550   000108                     u380:
   551   000108  EFD3  F000         	goto	l161
   552   00010C                     l1205:
   553                           
   554                           ;System_FSM.c: 76:             {;System_FSM.c: 78:               watering_status_led();
   555   00010C  EC20  F002         	call	_watering_status_led	;wreg free
   556   000110                     l1207:
   557                           
   558                           ;System_FSM.c: 75:             while(get_current_state() == WATER_PLANTS)
   559   000110  EC39  F002         	call	_get_current_state	;wreg free
   560   000114  0A02               	xorlw	2
   561   000116  B4D8               	btfsc	status,2,c
   562   000118  EF90  F000         	goto	u391
   563   00011C  EF92  F000         	goto	u390
   564   000120                     u391:
   565   000120  EF86  F000         	goto	l1205
   566   000124                     u390:
   567   000124  EFD3  F000         	goto	l161
   568   000128                     l1209:
   569                           
   570                           ;System_FSM.c: 90:             {;System_FSM.c: 91:               checking_moisture_statu
      +                          s_led();
   571   000128  EC2A  F002         	call	_checking_moisture_status_led	;wreg free
   572   00012C                     
   573                           ;System_FSM.c: 92:               _delay((unsigned long)((300)*(8000000/4000.0)));
   574   00012C  0E04               	movlw	4
   575   00012E  6E16               	movwf	(??_FSM_begin+1)^0,c
   576   000130  0E0C               	movlw	12
   577   000132  6E15               	movwf	??_FSM_begin^0,c
   578   000134  0E34               	movlw	52
   579   000136                     u447:
   580   000136  2EE8               	decfsz	wreg,f,c
   581   000138  D7FE               	bra	u447
   582   00013A  2E15               	decfsz	??_FSM_begin^0,f,c
   583   00013C  D7FC               	bra	u447
   584   00013E  2E16               	decfsz	(??_FSM_begin+1)^0,f,c
   585   000140  D7FA               	bra	u447
   586   000142                     
   587                           ;System_FSM.c: 93:               set_state(WATER_PLANTS);
   588   000142  0E02               	movlw	2
   589   000144  EC2F  F002         	call	_set_state
   590   000148                     l1215:
   591                           
   592                           ;System_FSM.c: 89:             while(get_current_state() == CHECK_MOISTURE)
   593   000148  EC39  F002         	call	_get_current_state	;wreg free
   594   00014C  0A03               	xorlw	3
   595   00014E  B4D8               	btfsc	status,2,c
   596   000150  EFAC  F000         	goto	u401
   597   000154  EFAE  F000         	goto	u400
   598   000158                     u401:
   599   000158  EF94  F000         	goto	l1209
   600   00015C                     u400:
   601   00015C  EFD3  F000         	goto	l161
   602   000160                     l1217:
   603                           
   604                           ;System_FSM.c: 102:         {;System_FSM.c: 103:             set_state(INIT_STATE);
   605   000160  0E00               	movlw	0
   606   000162  EC2F  F002         	call	_set_state
   607                           
   608                           ;System_FSM.c: 104:             break;
   609   000166  EFD3  F000         	goto	l161
   610   00016A                     l1221:
   611   00016A  EC39  F002         	call	_get_current_state	;wreg free
   612   00016E  6E15               	movwf	??_FSM_begin^0,c
   613   000170  6A16               	clrf	(??_FSM_begin+1)^0,c
   614                           
   615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   616                           ; Switch size 1, requested type "simple"
   617                           ; Number of cases is 1, Range of values is 0 to 0
   618                           ; switch strategies available:
   619                           ; Name         Instructions Cycles
   620                           ; simple_byte            4     3 (average)
   621                           ;	Chosen strategy is simple_byte
   622   000172  5016               	movf	(??_FSM_begin+1)^0,w,c
   623   000174  0A00               	xorlw	0	; case 0
   624   000176  B4D8               	btfsc	status,2,c
   625   000178  EFC0  F000         	goto	l1271
   626   00017C  EFB0  F000         	goto	l1217
   627   000180                     l1271:
   628                           
   629                           ; Switch size 1, requested type "simple"
   630                           ; Number of cases is 4, Range of values is 0 to 3
   631                           ; switch strategies available:
   632                           ; Name         Instructions Cycles
   633                           ; simple_byte           13     7 (average)
   634                           ;	Chosen strategy is simple_byte
   635   000180  5015               	movf	??_FSM_begin^0,w,c
   636   000182  0A00               	xorlw	0	; case 0
   637   000184  B4D8               	btfsc	status,2,c
   638   000186  EF4F  F000         	goto	l1185
   639   00018A  0A01               	xorlw	1	; case 1
   640   00018C  B4D8               	btfsc	status,2,c
   641   00018E  EF7A  F000         	goto	l1203
   642   000192  0A03               	xorlw	3	; case 2
   643   000194  B4D8               	btfsc	status,2,c
   644   000196  EF88  F000         	goto	l1207
   645   00019A  0A01               	xorlw	1	; case 3
   646   00019C  B4D8               	btfsc	status,2,c
   647   00019E  EFA4  F000         	goto	l1215
   648   0001A2  EFB0  F000         	goto	l1217
   649   0001A6                     l161:
   650   0001A6  0012               	return		;funcret
   651   0001A8                     __end_of_FSM_begin:
   652                           	callstack 0
   653                           
   654 ;; *************** function _watering_status_led *****************
   655 ;; Defined at:
   656 ;;		line 40 in file "LedDriver.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   670 ;;      Params:         0       0       0       0
   671 ;;      Locals:         0       0       0       0
   672 ;;      Temps:          0       0       0       0
   673 ;;      Totals:         0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 4
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_FSM_begin
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text4
   685   000440                     __ptext4:
   686                           	callstack 0
   687   000440                     _watering_status_led:
   688                           	callstack 25
   689   000440                     
   690                           ;LedDriver.c: 42:     (((LATD))|=((0x01)));
   691   000440  808C               	bsf	140,0,c	;volatile
   692                           
   693                           ;LedDriver.c: 44:     (((LATC))&=(~((0x02))));
   694   000442  928B               	bcf	139,1,c	;volatile
   695                           
   696                           ;LedDriver.c: 45:     (((LATC))&=(~((0x04))));
   697   000444  948B               	bcf	139,2,c	;volatile
   698                           
   699                           ;LedDriver.c: 46:     (((LATD))&=(~((0x02))));
   700   000446  928C               	bcf	140,1,c	;volatile
   701   000448  0012               	return		;funcret
   702   00044A                     __end_of_watering_status_led:
   703                           	callstack 0
   704                           
   705 ;; *************** function _set_state *****************
   706 ;; Defined at:
   707 ;;		line 9 in file "FSM_states.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  state_to_set    1    wreg     enum E2
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  state_to_set    1   14[COMRAM] enum E2
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   721 ;;      Params:         0       0       0       0
   722 ;;      Locals:         1       0       0       0
   723 ;;      Temps:          0       0       0       0
   724 ;;      Totals:         1       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 4
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;;		_FSM_begin
   733 ;;		_SMS_read_and_set_state
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text5
   738   00045E                     __ptext5:
   739                           	callstack 0
   740   00045E                     _set_state:
   741                           	callstack 26
   742                           
   743                           ;incstack = 0
   744                           ;set_state@state_to_set stored from wreg
   745   00045E  6E0F               	movwf	set_state@state_to_set^0,c
   746   000460                     
   747                           ;FSM_states.c: 9: void set_state(STATES state_to_set);FSM_states.c: 10: {;FSM_states.c: 
      +                          11:     FSM_state = state_to_set;
   748   000460  C00F  F03C         	movff	set_state@state_to_set,_FSM_state
   749   000464  0012               	return		;funcret
   750   000466                     __end_of_set_state:
   751                           	callstack 0
   752                           
   753 ;; *************** function _init_leds *****************
   754 ;; Defined at:
   755 ;;		line 12 in file "LedDriver.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   769 ;;      Params:         0       0       0       0
   770 ;;      Locals:         0       0       0       0
   771 ;;      Temps:          2       0       0       0
   772 ;;      Totals:         2       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; Hardware stack levels required when called: 4
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_FSM_begin
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text6
   784   00037A                     __ptext6:
   785                           	callstack 0
   786   00037A                     _init_leds:
   787                           	callstack 25
   788   00037A                     
   789                           ;LedDriver.c: 14:     (((TRISC))&=(~((0x02))));
   790   00037A  9294               	bcf	148,1,c	;volatile
   791                           
   792                           ;LedDriver.c: 15:     (((TRISC))&=(~((0x04))));
   793   00037C  9494               	bcf	148,2,c	;volatile
   794                           
   795                           ;LedDriver.c: 16:     (((TRISD))&=(~((0x02))));
   796   00037E  9295               	bcf	149,1,c	;volatile
   797                           
   798                           ;LedDriver.c: 17:     (((TRISD))&=(~((0x01))));
   799   000380  9095               	bcf	149,0,c	;volatile
   800                           
   801                           ;LedDriver.c: 19:     (((LATC))|=((0x02)));
   802   000382  828B               	bsf	139,1,c	;volatile
   803                           
   804                           ;LedDriver.c: 20:     (((LATC))|=((0x04)));
   805   000384  848B               	bsf	139,2,c	;volatile
   806                           
   807                           ;LedDriver.c: 21:     (((LATD))|=((0x02)));
   808   000386  828C               	bsf	140,1,c	;volatile
   809                           
   810                           ;LedDriver.c: 22:     (((LATD))|=((0x01)));
   811   000388  808C               	bsf	140,0,c	;volatile
   812   00038A                     
   813                           ;LedDriver.c: 24:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   814   00038A  0E0B               	movlw	11
   815   00038C  6E10               	movwf	(??_init_leds+1)^0,c
   816   00038E  0E26               	movlw	38
   817   000390  6E0F               	movwf	??_init_leds^0,c
   818   000392  0E5E               	movlw	94
   819   000394                     u457:
   820   000394  2EE8               	decfsz	wreg,f,c
   821   000396  D7FE               	bra	u457
   822   000398  2E0F               	decfsz	??_init_leds^0,f,c
   823   00039A  D7FC               	bra	u457
   824   00039C  2E10               	decfsz	(??_init_leds+1)^0,f,c
   825   00039E  D7FA               	bra	u457
   826   0003A0                     
   827                           ;LedDriver.c: 26:     (((LATC))&=(~((0x02))));
   828   0003A0  928B               	bcf	139,1,c	;volatile
   829   0003A2                     
   830                           ;LedDriver.c: 27:     (((LATC))&=(~((0x04))));
   831   0003A2  948B               	bcf	139,2,c	;volatile
   832   0003A4                     
   833                           ;LedDriver.c: 28:     (((LATD))&=(~((0x02))));
   834   0003A4  928C               	bcf	140,1,c	;volatile
   835   0003A6                     
   836                           ;LedDriver.c: 29:     (((LATD))&=(~((0x01))));
   837   0003A6  908C               	bcf	140,0,c	;volatile
   838   0003A8  0012               	return		;funcret
   839   0003AA                     __end_of_init_leds:
   840                           	callstack 0
   841                           
   842 ;; *************** function _idle_status_led *****************
   843 ;; Defined at:
   844 ;;		line 32 in file "LedDriver.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   858 ;;      Params:         0       0       0       0
   859 ;;      Locals:         0       0       0       0
   860 ;;      Temps:          0       0       0       0
   861 ;;      Totals:         0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 4
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_FSM_begin
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text7
   873   00044A                     __ptext7:
   874                           	callstack 0
   875   00044A                     _idle_status_led:
   876                           	callstack 25
   877   00044A                     
   878                           ;LedDriver.c: 34:     (((LATC))|=((0x04)));
   879   00044A  848B               	bsf	139,2,c	;volatile
   880                           
   881                           ;LedDriver.c: 36:     (((LATC))&=(~((0x02))));
   882   00044C  928B               	bcf	139,1,c	;volatile
   883                           
   884                           ;LedDriver.c: 37:     (((LATD))&=(~((0x01))));
   885   00044E  908C               	bcf	140,0,c	;volatile
   886                           
   887                           ;LedDriver.c: 38:     (((LATD))&=(~((0x02))));
   888   000450  928C               	bcf	140,1,c	;volatile
   889   000452  0012               	return		;funcret
   890   000454                     __end_of_idle_status_led:
   891                           	callstack 0
   892                           
   893 ;; *************** function _get_current_state *****************
   894 ;; Defined at:
   895 ;;		line 5 in file "FSM_states.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      enum E2
   902 ;; Registers used:
   903 ;;		wreg, status,2
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   909 ;;      Params:         0       0       0       0
   910 ;;      Locals:         0       0       0       0
   911 ;;      Temps:          0       0       0       0
   912 ;;      Totals:         0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 4
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_FSM_begin
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text8
   924   000472                     __ptext8:
   925                           	callstack 0
   926   000472                     _get_current_state:
   927                           	callstack 25
   928   000472                     
   929                           ;FSM_states.c: 7:     return FSM_state;
   930   000472  503C               	movf	_FSM_state^0,w,c
   931   000474  0012               	return		;funcret
   932   000476                     __end_of_get_current_state:
   933                           	callstack 0
   934                           
   935 ;; *************** function _checking_moisture_status_led *****************
   936 ;; Defined at:
   937 ;;		line 49 in file "LedDriver.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   951 ;;      Params:         0       0       0       0
   952 ;;      Locals:         0       0       0       0
   953 ;;      Temps:          0       0       0       0
   954 ;;      Totals:         0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 4
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_FSM_begin
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text9
   966   000454                     __ptext9:
   967                           	callstack 0
   968   000454                     _checking_moisture_status_led:
   969                           	callstack 25
   970   000454                     
   971                           ;LedDriver.c: 51:     (((LATD))|=((0x02)));
   972   000454  828C               	bsf	140,1,c	;volatile
   973                           
   974                           ;LedDriver.c: 53:     (((LATC))&=(~((0x02))));
   975   000456  928B               	bcf	139,1,c	;volatile
   976                           
   977                           ;LedDriver.c: 54:     (((LATC))&=(~((0x04))));
   978   000458  948B               	bcf	139,2,c	;volatile
   979                           
   980                           ;LedDriver.c: 55:     (((LATD))&=(~((0x01))));
   981   00045A  908C               	bcf	140,0,c	;volatile
   982   00045C  0012               	return		;funcret
   983   00045E                     __end_of_checking_moisture_status_led:
   984                           	callstack 0
   985                           
   986 ;; *************** function _Timer0_start *****************
   987 ;; Defined at:
   988 ;;		line 83 in file "PIC18F4331_Timer.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		None
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1002 ;;      Params:         0       0       0       0
  1003 ;;      Locals:         0       0       0       0
  1004 ;;      Temps:          0       0       0       0
  1005 ;;      Totals:         0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 4
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_FSM_begin
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text10
  1017   000476                     __ptext10:
  1018                           	callstack 0
  1019   000476                     _Timer0_start:
  1020                           	callstack 25
  1021   000476                     
  1022                           ;PIC18F4331_Timer.c: 85:     T0CONbits.TMR0ON = 1;
  1023   000476  8ED5               	bsf	213,7,c	;volatile
  1024   000478  0012               	return		;funcret
  1025   00047A                     __end_of_Timer0_start:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _Register_Callback *****************
  1029 ;; Defined at:
  1030 ;;		line 47 in file "SystemCallbacks.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  config          2   16[COMRAM] PTR struct .
  1033 ;;		 -> FSM_begin@WateringDoneCB_Config(8), FSM_begin@MoistureCB_Config(8), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1045 ;;      Params:         2       0       0       0
  1046 ;;      Locals:         0       0       0       0
  1047 ;;      Temps:          2       0       0       0
  1048 ;;      Totals:         4       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 5
  1052 ;; This function calls:
  1053 ;;		_Reset_Counter
  1054 ;; This function is called by:
  1055 ;;		_FSM_begin
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text11
  1060   000270                     __ptext11:
  1061                           	callstack 0
  1062   000270                     _Register_Callback:
  1063                           	callstack 24
  1064   000270                     
  1065                           ;SystemCallbacks.c: 47: U8 Register_Callback(Callback_Config_t *config);SystemCallbacks.
      +                          c: 48: {;SystemCallbacks.c: 49:     if(callback_count < (5))
  1066   000270  0E05               	movlw	5
  1067   000272  603B               	cpfslt	_callback_count^0,c
  1068   000274  EF3E  F001         	goto	u281
  1069   000278  EF40  F001         	goto	u280
  1070   00027C                     u281:
  1071   00027C  EF74  F001         	goto	l188
  1072   000280                     u280:
  1073   000280                     
  1074                           ;SystemCallbacks.c: 50:     {;SystemCallbacks.c: 51:         if(config->callback != ((vo
      +                          id*)0) && config->expiry_time > 0)
  1075   000280  EE20 F002          	lfsr	2,2
  1076   000284  5011               	movf	Register_Callback@config^0,w,c
  1077   000286  26D9               	addwf	fsr2l,f,c
  1078   000288  5012               	movf	(Register_Callback@config+1)^0,w,c
  1079   00028A  22DA               	addwfc	fsr2h,f,c
  1080   00028C  50DE               	movf	postinc2,w,c
  1081   00028E  10DE               	iorwf	postinc2,w,c
  1082   000290  B4D8               	btfsc	status,2,c
  1083   000292  EF4D  F001         	goto	u291
  1084   000296  EF4F  F001         	goto	u290
  1085   00029A                     u291:
  1086   00029A  EF74  F001         	goto	l188
  1087   00029E                     u290:
  1088   00029E  C011  FFD9         	movff	Register_Callback@config,fsr2l
  1089   0002A2  C012  FFDA         	movff	Register_Callback@config+1,fsr2h
  1090   0002A6  50DE               	movf	postinc2,w,c
  1091   0002A8  10DE               	iorwf	postinc2,w,c
  1092   0002AA  B4D8               	btfsc	status,2,c
  1093   0002AC  EF5A  F001         	goto	u301
  1094   0002B0  EF5C  F001         	goto	u300
  1095   0002B4                     u301:
  1096   0002B4  EF74  F001         	goto	l188
  1097   0002B8                     u300:
  1098   0002B8                     
  1099                           ;SystemCallbacks.c: 52:         {;SystemCallbacks.c: 54:             registered_callback
      +                          s[callback_count] = (*config);
  1100   0002B8  C011  FFD9         	movff	Register_Callback@config,fsr2l
  1101   0002BC  C012  FFDA         	movff	Register_Callback@config+1,fsr2h
  1102   0002C0  503B               	movf	_callback_count^0,w,c
  1103   0002C2  0D08               	mullw	8
  1104   0002C4  0E60               	movlw	low _registered_callbacks
  1105   0002C6  24F3               	addwf	243,w,c
  1106   0002C8  6EE1               	movwf	fsr1l,c
  1107   0002CA  0E00               	movlw	high _registered_callbacks
  1108   0002CC  20F4               	addwfc	prodh,w,c
  1109   0002CE  6EE2               	movwf	fsr1h,c
  1110   0002D0  0E07               	movlw	7
  1111   0002D2                     u311:
  1112   0002D2  CFDB FFE3          	movff	plusw2,plusw1
  1113   0002D6  06E8               	decf	wreg,f,c
  1114   0002D8  E2FC               	bc	u311
  1115   0002DA                     
  1116                           ;SystemCallbacks.c: 55:             Reset_Counter(config);
  1117   0002DA  C011  F00F         	movff	Register_Callback@config,Reset_Counter@config
  1118   0002DE  C012  F010         	movff	Register_Callback@config+1,Reset_Counter@config+1
  1119   0002E2  EC06  F002         	call	_Reset_Counter	;wreg free
  1120   0002E6                     
  1121                           ;SystemCallbacks.c: 57:             callback_count++;
  1122   0002E6  2A3B               	incf	_callback_count^0,f,c
  1123   0002E8                     l188:
  1124   0002E8  0012               	return		;funcret
  1125   0002EA                     __end_of_Register_Callback:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _Reset_Counter *****************
  1129 ;; Defined at:
  1130 ;;		line 42 in file "SystemCallbacks.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  config          2   14[COMRAM] PTR struct .
  1133 ;;		 -> FSM_begin@WateringDoneCB_Config(8), FSM_begin@MoistureCB_Config(8), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1145 ;;      Params:         2       0       0       0
  1146 ;;      Locals:         0       0       0       0
  1147 ;;      Temps:          0       0       0       0
  1148 ;;      Totals:         2       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 4
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_Register_Callback
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text12
  1160   00040C                     __ptext12:
  1161                           	callstack 0
  1162   00040C                     _Reset_Counter:
  1163                           	callstack 24
  1164   00040C                     
  1165                           ;SystemCallbacks.c: 42: void Reset_Counter(Callback_Config_t * config);SystemCallbacks.c
      +                          : 43: {;SystemCallbacks.c: 44:     config->count = 0;
  1166   00040C  EE20 F005          	lfsr	2,5
  1167   000410  500F               	movf	Reset_Counter@config^0,w,c
  1168   000412  26D9               	addwf	fsr2l,f,c
  1169   000414  5010               	movf	(Reset_Counter@config+1)^0,w,c
  1170   000416  22DA               	addwfc	fsr2h,f,c
  1171   000418  0E00               	movlw	0
  1172   00041A  6EDE               	movwf	postinc2,c
  1173   00041C  0E00               	movlw	0
  1174   00041E  6EDD               	movwf	postdec2,c
  1175   000420  0012               	return		;funcret
  1176   000422                     __end_of_Reset_Counter:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _Callbacks_Init *****************
  1180 ;; Defined at:
  1181 ;;		line 9 in file "SystemCallbacks.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  callback        1   14[COMRAM] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1195 ;;      Params:         0       0       0       0
  1196 ;;      Locals:         1       0       0       0
  1197 ;;      Temps:          0       0       0       0
  1198 ;;      Totals:         1       0       0       0
  1199 ;;Total ram usage:        1 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 4
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_FSM_begin
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text13
  1210   0002EA                     __ptext13:
  1211                           	callstack 0
  1212   0002EA                     _Callbacks_Init:
  1213                           	callstack 25
  1214   0002EA                     
  1215                           ;SystemCallbacks.c: 11:     for(U8 callback=0; callback<(5); callback++)
  1216   0002EA  0E00               	movlw	0
  1217   0002EC  6E0F               	movwf	Callbacks_Init@callback^0,c
  1218   0002EE                     l1141:
  1219                           
  1220                           ;SystemCallbacks.c: 12:     {;SystemCallbacks.c: 13:         registered_callbacks[callba
      +                          ck].callback = ((void*)0);
  1221   0002EE  500F               	movf	Callbacks_Init@callback^0,w,c
  1222   0002F0  0D08               	mullw	8
  1223   0002F2  0E62               	movlw	low (_registered_callbacks+2)
  1224   0002F4  24F3               	addwf	243,w,c
  1225   0002F6  6ED9               	movwf	fsr2l,c
  1226   0002F8  0E00               	movlw	high (_registered_callbacks+2)
  1227   0002FA  20F4               	addwfc	prodh,w,c
  1228   0002FC  6EDA               	movwf	fsr2h,c
  1229   0002FE  0E00               	movlw	0
  1230   000300  6EDE               	movwf	postinc2,c
  1231   000302  0E00               	movlw	0
  1232   000304  6EDD               	movwf	postdec2,c
  1233                           
  1234                           ;SystemCallbacks.c: 14:         registered_callbacks[callback].count = 0;
  1235   000306  500F               	movf	Callbacks_Init@callback^0,w,c
  1236   000308  0D08               	mullw	8
  1237   00030A  0E65               	movlw	low (_registered_callbacks+5)
  1238   00030C  24F3               	addwf	243,w,c
  1239   00030E  6ED9               	movwf	fsr2l,c
  1240   000310  0E00               	movlw	high (_registered_callbacks+5)
  1241   000312  20F4               	addwfc	prodh,w,c
  1242   000314  6EDA               	movwf	fsr2h,c
  1243   000316  0E00               	movlw	0
  1244   000318  6EDE               	movwf	postinc2,c
  1245   00031A  0E00               	movlw	0
  1246   00031C  6EDD               	movwf	postdec2,c
  1247   00031E                     
  1248                           ;SystemCallbacks.c: 15:         callback_count = 0;
  1249   00031E  0E00               	movlw	0
  1250   000320  6E3B               	movwf	_callback_count^0,c
  1251   000322                     
  1252                           ;SystemCallbacks.c: 16:     }
  1253   000322  2A0F               	incf	Callbacks_Init@callback^0,f,c
  1254   000324  0E04               	movlw	4
  1255   000326  640F               	cpfsgt	Callbacks_Init@callback^0,c
  1256   000328  EF98  F001         	goto	u271
  1257   00032C  EF9A  F001         	goto	u270
  1258   000330                     u271:
  1259   000330  EF77  F001         	goto	l1141
  1260   000334                     u270:
  1261   000334  0012               	return		;funcret
  1262   000336                     __end_of_Callbacks_Init:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _timer_overflow_isr *****************
  1266 ;; Defined at:
  1267 ;;		line 10 in file "PIC18F4331_Timer.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1281 ;;      Params:         0       0       0       0
  1282 ;;      Locals:         0       0       0       0
  1283 ;;      Temps:          8       0       0       0
  1284 ;;      Totals:         8       0       0       0
  1285 ;;Total ram usage:        8 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 3
  1288 ;; This function calls:
  1289 ;;		_Callbacks_Manager
  1290 ;; This function is called by:
  1291 ;;		Interrupt level 2
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	intcode
  1296   000008                     __pintcode:
  1297                           	callstack 0
  1298   000008                     _timer_overflow_isr:
  1299                           	callstack 24
  1300                           
  1301                           ;incstack = 0
  1302   000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1303   00000A  CFFA F007          	movff	pclath,??_timer_overflow_isr
  1304   00000E  CFFB F008          	movff	pclatu,??_timer_overflow_isr+1
  1305   000012  CFE1 F009          	movff	fsr1l,??_timer_overflow_isr+2
  1306   000016  CFE2 F00A          	movff	fsr1h,??_timer_overflow_isr+3
  1307   00001A  CFD9 F00B          	movff	fsr2l,??_timer_overflow_isr+4
  1308   00001E  CFDA F00C          	movff	fsr2h,??_timer_overflow_isr+5
  1309   000022  CFF3 F00D          	movff	prodl,??_timer_overflow_isr+6
  1310   000026  CFF4 F00E          	movff	prodh,??_timer_overflow_isr+7
  1311   00002A                     
  1312                           ;PIC18F4331_Timer.c: 13:     INTCONbits.GIEH = 0;
  1313   00002A  9EF2               	bcf	242,7,c	;volatile
  1314                           
  1315                           ;PIC18F4331_Timer.c: 14:     INTCONbits.GIEL = 1;
  1316   00002C  8CF2               	bsf	242,6,c	;volatile
  1317   00002E                     
  1318                           ;PIC18F4331_Timer.c: 28:     if(TMR0L < (0x7C))
  1319   00002E  0E7C               	movlw	124
  1320   000030  60D6               	cpfslt	214,c	;volatile
  1321   000032  EF1D  F000         	goto	i2u41_41
  1322   000036  EF1F  F000         	goto	i2u41_40
  1323   00003A                     i2u41_41:
  1324   00003A  EF21  F000         	goto	i2l1233
  1325   00003E                     i2u41_40:
  1326   00003E                     
  1327                           ;PIC18F4331_Timer.c: 29:     {;PIC18F4331_Timer.c: 30:         TMR0L = (0x7C);
  1328   00003E  0E7C               	movlw	124
  1329   000040  6ED6               	movwf	214,c	;volatile
  1330   000042                     i2l1233:
  1331                           
  1332                           ;PIC18F4331_Timer.c: 32:     if(TMR0H < (0xE1))
  1333   000042  0EE1               	movlw	225
  1334   000044  60D7               	cpfslt	215,c	;volatile
  1335   000046  EF27  F000         	goto	i2u42_41
  1336   00004A  EF29  F000         	goto	i2u42_40
  1337   00004E                     i2u42_41:
  1338   00004E  EF2B  F000         	goto	i2l1237
  1339   000052                     i2u42_40:
  1340   000052                     
  1341                           ;PIC18F4331_Timer.c: 33:     {;PIC18F4331_Timer.c: 34:         TMR0H = (0xE1);
  1342   000052  0EE1               	movlw	225
  1343   000054  6ED7               	movwf	215,c	;volatile
  1344   000056                     i2l1237:
  1345                           
  1346                           ;PIC18F4331_Timer.c: 38:     if(INTCONbits.TMR0IF)
  1347   000056  A4F2               	btfss	242,2,c	;volatile
  1348   000058  EF30  F000         	goto	i2u43_41
  1349   00005C  EF32  F000         	goto	i2u43_40
  1350   000060                     i2u43_41:
  1351   000060  EF37  F000         	goto	i2l1245
  1352   000064                     i2u43_40:
  1353   000064                     
  1354                           ;PIC18F4331_Timer.c: 39:     {;PIC18F4331_Timer.c: 41:         tmr0Counter++;
  1355   000064  4A37               	infsnz	_tmr0Counter^0,f,c	;volatile
  1356   000066  2A38               	incf	(_tmr0Counter+1)^0,f,c	;volatile
  1357   000068                     
  1358                           ;PIC18F4331_Timer.c: 43:         Callbacks_Manager();
  1359   000068  ECD4  F000         	call	_Callbacks_Manager	;wreg free
  1360   00006C                     
  1361                           ;PIC18F4331_Timer.c: 46:         INTCONbits.TMR0IF = 0;
  1362   00006C  94F2               	bcf	242,2,c	;volatile
  1363   00006E                     i2l1245:
  1364                           
  1365                           ;PIC18F4331_Timer.c: 50:     INTCONbits.GIEH = 1;
  1366   00006E  8EF2               	bsf	242,7,c	;volatile
  1367   000070                     
  1368                           ;PIC18F4331_Timer.c: 51:     INTCONbits.GIEL = 1;
  1369   000070  8CF2               	bsf	242,6,c	;volatile
  1370   000072  C00E  FFF4         	movff	??_timer_overflow_isr+7,prodh
  1371   000076  C00D  FFF3         	movff	??_timer_overflow_isr+6,prodl
  1372   00007A  C00C  FFDA         	movff	??_timer_overflow_isr+5,fsr2h
  1373   00007E  C00B  FFD9         	movff	??_timer_overflow_isr+4,fsr2l
  1374   000082  C00A  FFE2         	movff	??_timer_overflow_isr+3,fsr1h
  1375   000086  C009  FFE1         	movff	??_timer_overflow_isr+2,fsr1l
  1376   00008A  C008  FFFB         	movff	??_timer_overflow_isr+1,pclatu
  1377   00008E  C007  FFFA         	movff	??_timer_overflow_isr,pclath
  1378   000092  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1379   000094  0011               	retfie		f
  1380   000096                     __end_of_timer_overflow_isr:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _Callbacks_Manager *****************
  1384 ;; Defined at:
  1385 ;;		line 24 in file "SystemCallbacks.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  callbacks       1    5[COMRAM] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1399 ;;      Params:         0       0       0       0
  1400 ;;      Locals:         1       0       0       0
  1401 ;;      Temps:          4       0       0       0
  1402 ;;      Totals:         5       0       0       0
  1403 ;;Total ram usage:        5 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 2
  1406 ;; This function calls:
  1407 ;;		_Check_Moisture_cb
  1408 ;;		_Watering_Done_cb
  1409 ;; This function is called by:
  1410 ;;		_timer_overflow_isr
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text15
  1415   0001A8                     __ptext15:
  1416                           	callstack 0
  1417   0001A8                     _Callbacks_Manager:
  1418                           	callstack 24
  1419   0001A8                     
  1420                           ;SystemCallbacks.c: 26:     for (U8 callbacks = 0; callbacks < (5); callbacks++)
  1421   0001A8  0E00               	movlw	0
  1422   0001AA  6E06               	movwf	Callbacks_Manager@callbacks^0,c
  1423   0001AC                     i2l1169:
  1424                           
  1425                           ;SystemCallbacks.c: 27:     {;SystemCallbacks.c: 28:         (registered_callbacks[callb
      +                          acks].count)++;
  1426   0001AC  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1427   0001AE  0D08               	mullw	8
  1428   0001B0  0E65               	movlw	low (_registered_callbacks+5)
  1429   0001B2  24F3               	addwf	243,w,c
  1430   0001B4  6ED9               	movwf	fsr2l,c
  1431   0001B6  0E00               	movlw	high (_registered_callbacks+5)
  1432   0001B8  20F4               	addwfc	prodh,w,c
  1433   0001BA  6EDA               	movwf	fsr2h,c
  1434   0001BC  2ADE               	incf	postinc2,f,c
  1435   0001BE  0E00               	movlw	0
  1436   0001C0  22DD               	addwfc	postdec2,f,c
  1437   0001C2                     
  1438                           ;SystemCallbacks.c: 29:         if(registered_callbacks[callbacks].count >=
  1439   0001C2  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1440   0001C4  0D08               	mullw	8
  1441   0001C6  0E60               	movlw	low _registered_callbacks
  1442   0001C8  24F3               	addwf	243,w,c
  1443   0001CA  6ED9               	movwf	fsr2l,c
  1444   0001CC  0E00               	movlw	high _registered_callbacks
  1445   0001CE  20F4               	addwfc	prodh,w,c
  1446   0001D0  6EDA               	movwf	fsr2h,c
  1447   0001D2  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1448   0001D4  0D08               	mullw	8
  1449   0001D6  0E65               	movlw	low (_registered_callbacks+5)
  1450   0001D8  24F3               	addwf	243,w,c
  1451   0001DA  6EE1               	movwf	fsr1l,c
  1452   0001DC  0E00               	movlw	high (_registered_callbacks+5)
  1453   0001DE  20F4               	addwfc	prodh,w,c
  1454   0001E0  6EE2               	movwf	fsr1h,c
  1455   0001E2  50DE               	movf	postinc2,w,c
  1456   0001E4  5CE6               	subwf	postinc1,w,c
  1457   0001E6  50DE               	movf	postinc2,w,c
  1458   0001E8  58E6               	subwfb	postinc1,w,c
  1459   0001EA  A0D8               	btfss	status,0,c
  1460   0001EC  EFFA  F000         	goto	i2u32_41
  1461   0001F0  EFFC  F000         	goto	i2u32_40
  1462   0001F4                     i2u32_41:
  1463   0001F4  EF2E  F001         	goto	i2l1179
  1464   0001F8                     i2u32_40:
  1465   0001F8                     
  1466                           ;SystemCallbacks.c: 31:         {;SystemCallbacks.c: 32:             if(registered_callb
      +                          acks[callbacks].callback != ((void*)0))
  1467   0001F8  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1468   0001FA  0D08               	mullw	8
  1469   0001FC  0E62               	movlw	low (_registered_callbacks+2)
  1470   0001FE  24F3               	addwf	243,w,c
  1471   000200  6ED9               	movwf	fsr2l,c
  1472   000202  0E00               	movlw	high (_registered_callbacks+2)
  1473   000204  20F4               	addwfc	prodh,w,c
  1474   000206  6EDA               	movwf	fsr2h,c
  1475   000208  50DE               	movf	postinc2,w,c
  1476   00020A  10DE               	iorwf	postinc2,w,c
  1477   00020C  B4D8               	btfsc	status,2,c
  1478   00020E  EF0B  F001         	goto	i2u33_41
  1479   000212  EF0D  F001         	goto	i2u33_40
  1480   000216                     i2u33_41:
  1481   000216  EF2E  F001         	goto	i2l1179
  1482   00021A                     i2u33_40:
  1483   00021A                     
  1484                           ;SystemCallbacks.c: 33:             {;SystemCallbacks.c: 34:                 registered_
      +                          callbacks[callbacks].count = 0;
  1485   00021A  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1486   00021C  0D08               	mullw	8
  1487   00021E  0E65               	movlw	low (_registered_callbacks+5)
  1488   000220  24F3               	addwf	243,w,c
  1489   000222  6ED9               	movwf	fsr2l,c
  1490   000224  0E00               	movlw	high (_registered_callbacks+5)
  1491   000226  20F4               	addwfc	prodh,w,c
  1492   000228  6EDA               	movwf	fsr2h,c
  1493   00022A  0E00               	movlw	0
  1494   00022C  6EDE               	movwf	postinc2,c
  1495   00022E  0E00               	movlw	0
  1496   000230  6EDD               	movwf	postdec2,c
  1497   000232                     
  1498                           ;SystemCallbacks.c: 35:                 registered_callbacks[callbacks].callback();
  1499   000232  5006               	movf	Callbacks_Manager@callbacks^0,w,c
  1500   000234  0D08               	mullw	8
  1501   000236  0E62               	movlw	low (_registered_callbacks+2)
  1502   000238  24F3               	addwf	243,w,c
  1503   00023A  6ED9               	movwf	fsr2l,c
  1504   00023C  0E00               	movlw	high (_registered_callbacks+2)
  1505   00023E  20F4               	addwfc	prodh,w,c
  1506   000240  6EDA               	movwf	fsr2h,c
  1507   000242  D802               	call	i2u34_48
  1508   000244  EF2E  F001         	goto	i2u34_49
  1509   000248                     i2u34_48:
  1510   000248  0005               	push	
  1511   00024A  6EFA               	movwf	pclath,c
  1512   00024C  50DE               	movf	postinc2,w,c
  1513   00024E  6EFD               	movwf	tosl,c
  1514   000250  50DE               	movf	postinc2,w,c
  1515   000252  6EFE               	movwf	tosh,c
  1516   000254  50F8               	movf	tblptru,w,c
  1517   000256  6EFF               	movwf	tosu,c
  1518   000258  50FA               	movf	pclath,w,c
  1519   00025A  0012               	return		;indir
  1520   00025C                     i2u34_49:
  1521   00025C                     i2l1179:
  1522                           
  1523                           ;SystemCallbacks.c: 38:     }
  1524   00025C  2A06               	incf	Callbacks_Manager@callbacks^0,f,c
  1525   00025E  0E04               	movlw	4
  1526   000260  6406               	cpfsgt	Callbacks_Manager@callbacks^0,c
  1527   000262  EF35  F001         	goto	i2u35_41
  1528   000266  EF37  F001         	goto	i2u35_40
  1529   00026A                     i2u35_41:
  1530   00026A  EFD6  F000         	goto	i2l1169
  1531   00026E                     i2u35_40:
  1532   00026E  0012               	return		;funcret
  1533   000270                     __end_of_Callbacks_Manager:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _Check_Moisture_cb *****************
  1537 ;; Defined at:
  1538 ;;		line 8 in file "System_FSM.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1552 ;;      Params:         0       0       0       0
  1553 ;;      Locals:         0       0       0       0
  1554 ;;      Temps:          0       0       0       0
  1555 ;;      Totals:         0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 1
  1559 ;; This function calls:
  1560 ;;		i2_get_current_state
  1561 ;;		i2_set_state
  1562 ;; This function is called by:
  1563 ;;		_Callbacks_Manager
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text16
  1568   0003D4                     __ptext16:
  1569                           	callstack 0
  1570   0003D4                     _Check_Moisture_cb:
  1571                           	callstack 24
  1572   0003D4                     
  1573                           ;System_FSM.c: 13:     if(get_current_state() != WATER_PLANTS)
  1574   0003D4  EC3D  F002         	call	i2_get_current_state	;wreg free
  1575   0003D8  0A02               	xorlw	2
  1576   0003DA  B4D8               	btfsc	status,2,c
  1577   0003DC  EFF2  F001         	goto	i2u25_41
  1578   0003E0  EFF4  F001         	goto	i2u25_40
  1579   0003E4                     i2u25_41:
  1580   0003E4  EFF7  F001         	goto	i2l134
  1581   0003E8                     i2u25_40:
  1582   0003E8                     
  1583                           ;System_FSM.c: 14:     {;System_FSM.c: 15:       set_state(CHECK_MOISTURE);
  1584   0003E8  0E03               	movlw	3
  1585   0003EA  EC33  F002         	call	i2_set_state
  1586   0003EE                     i2l134:
  1587   0003EE  0012               	return		;funcret
  1588   0003F0                     __end_of_Check_Moisture_cb:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _Watering_Done_cb *****************
  1592 ;; Defined at:
  1593 ;;		line 19 in file "System_FSM.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1607 ;;      Params:         0       0       0       0
  1608 ;;      Locals:         0       0       0       0
  1609 ;;      Temps:          0       0       0       0
  1610 ;;      Totals:         0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 1
  1614 ;; This function calls:
  1615 ;;		i2_get_current_state
  1616 ;;		i2_set_state
  1617 ;; This function is called by:
  1618 ;;		_Callbacks_Manager
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text17
  1623   0003F0                     __ptext17:
  1624                           	callstack 0
  1625   0003F0                     _Watering_Done_cb:
  1626                           	callstack 24
  1627   0003F0                     
  1628                           ;System_FSM.c: 22:     if(get_current_state() == WATER_PLANTS)
  1629   0003F0  EC3D  F002         	call	i2_get_current_state	;wreg free
  1630   0003F4  0A02               	xorlw	2
  1631   0003F6  A4D8               	btfss	status,2,c
  1632   0003F8  EF00  F002         	goto	i2u26_41
  1633   0003FC  EF02  F002         	goto	i2u26_40
  1634   000400                     i2u26_41:
  1635   000400  EF05  F002         	goto	i2l138
  1636   000404                     i2u26_40:
  1637   000404                     
  1638                           ;System_FSM.c: 23:     {;System_FSM.c: 24:         set_state(IDLE_STATE);
  1639   000404  0E01               	movlw	1
  1640   000406  EC33  F002         	call	i2_set_state
  1641   00040A                     i2l138:
  1642   00040A  0012               	return		;funcret
  1643   00040C                     __end_of_Watering_Done_cb:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function i2_set_state *****************
  1647 ;; Defined at:
  1648 ;;		line 9 in file "FSM_states.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  state_to_set    1    wreg     enum E2
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  state_to_set    1    0[COMRAM] enum E2
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1662 ;;      Params:         0       0       0       0
  1663 ;;      Locals:         1       0       0       0
  1664 ;;      Temps:          0       0       0       0
  1665 ;;      Totals:         1       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_Check_Moisture_cb
  1672 ;;		_Watering_Done_cb
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text18
  1677   000466                     __ptext18:
  1678                           	callstack 0
  1679   000466                     i2_set_state:
  1680                           	callstack 24
  1681                           
  1682                           ;incstack = 0
  1683                           ;i2set_state@state_to_set stored from wreg
  1684   000466  6E01               	movwf	i2set_state@state_to_set^0,c
  1685   000468                     
  1686                           ;FSM_states.c: 9: void set_state(STATES state_to_set);FSM_states.c: 10: {;FSM_states.c: 
      +                          11:     FSM_state = state_to_set;
  1687   000468  C001  F03C         	movff	i2set_state@state_to_set,_FSM_state
  1688   00046C  0012               	return		;funcret
  1689   00046E                     __end_ofi2_set_state:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function i2_get_current_state *****************
  1693 ;; Defined at:
  1694 ;;		line 5 in file "FSM_states.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      enum E2
  1701 ;; Registers used:
  1702 ;;		wreg, status,2
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1708 ;;      Params:         0       0       0       0
  1709 ;;      Locals:         0       0       0       0
  1710 ;;      Temps:          0       0       0       0
  1711 ;;      Totals:         0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_Check_Moisture_cb
  1718 ;;		_Watering_Done_cb
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text19
  1723   00047A                     __ptext19:
  1724                           	callstack 0
  1725   00047A                     i2_get_current_state:
  1726                           	callstack 24
  1727   00047A                     
  1728                           ;FSM_states.c: 7:     return FSM_state;
  1729   00047A  503C               	movf	_FSM_state^0,w,c
  1730   00047C  0012               	return		;funcret
  1731   00047E                     __end_ofi2_get_current_state:
  1732                           	callstack 0
  1733   000000                     
  1734                           	psect	text20
  1735   000000                     __ptext20:
  1736                           	callstack 0
  1737   000000                     
  1738                           	psect	rparam
  1739   000000                     
  1740                           	psect	temp
  1741   00003D                     btemp:
  1742                           	callstack 0
  1743   00003D                     	ds	1
  1744   000000                     int$flags	set	btemp
  1745   000000                     wtemp8	set	btemp+1
  1746   000000                     ttemp5	set	btemp+1
  1747   000000                     ttemp6	set	btemp+4
  1748   000000                     ttemp7	set	btemp+8
  1749                           
  1750                           	psect	idloc
  1751                           
  1752                           ;Config register IDLOC0 @ 0x200000
  1753                           ;	unspecified, using default values
  1754   200000                     	org	2097152
  1755   200000  FF                 	db	255
  1756                           
  1757                           ;Config register IDLOC1 @ 0x200001
  1758                           ;	unspecified, using default values
  1759   200001                     	org	2097153
  1760   200001  FF                 	db	255
  1761                           
  1762                           ;Config register IDLOC2 @ 0x200002
  1763                           ;	unspecified, using default values
  1764   200002                     	org	2097154
  1765   200002  FF                 	db	255
  1766                           
  1767                           ;Config register IDLOC3 @ 0x200003
  1768                           ;	unspecified, using default values
  1769   200003                     	org	2097155
  1770   200003  FF                 	db	255
  1771                           
  1772                           ;Config register IDLOC4 @ 0x200004
  1773                           ;	unspecified, using default values
  1774   200004                     	org	2097156
  1775   200004  FF                 	db	255
  1776                           
  1777                           ;Config register IDLOC5 @ 0x200005
  1778                           ;	unspecified, using default values
  1779   200005                     	org	2097157
  1780   200005  FF                 	db	255
  1781                           
  1782                           ;Config register IDLOC6 @ 0x200006
  1783                           ;	unspecified, using default values
  1784   200006                     	org	2097158
  1785   200006  FF                 	db	255
  1786                           
  1787                           ;Config register IDLOC7 @ 0x200007
  1788                           ;	unspecified, using default values
  1789   200007                     	org	2097159
  1790   200007  FF                 	db	255
  1791                           
  1792                           	psect	config
  1793                           
  1794                           ; Padding undefined space
  1795   300000                     	org	3145728
  1796   300000  FF                 	db	255
  1797                           
  1798                           ;Config register CONFIG1H @ 0x300001
  1799                           ;	Oscillator Selection bits
  1800                           ;	OSC = IRCIO, Internal oscillator block, port function on RA6 and port function on RA7
  1801                           ;	Fail-Safe Clock Monitor Enable bit
  1802                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1803                           ;	Internal External Oscillator Switchover bit
  1804                           ;	IESO = ON, Internal External Switchover mode enabled
  1805   300001                     	org	3145729
  1806   300001  C8                 	db	200
  1807                           
  1808                           ;Config register CONFIG2L @ 0x300002
  1809                           ;	Power-up Timer Enable bit
  1810                           ;	PWRTEN = OFF, PWRT disabled
  1811                           ;	Brown-out Reset Enable bits
  1812                           ;	BOREN = ON, Brown-out Reset enabled
  1813                           ;	Brown Out Reset Voltage bits
  1814                           ;	BORV = 0x3, unprogrammed default
  1815   300002                     	org	3145730
  1816   300002  0F                 	db	15
  1817                           
  1818                           ;Config register CONFIG2H @ 0x300003
  1819                           ;	Watchdog Timer Enable bit
  1820                           ;	WDTEN = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1821                           ;	Watchdog Timer Postscale Select bits
  1822                           ;	WDPS = 32768, 1:32768
  1823                           ;	Watchdog Timer Window Enable bit
  1824                           ;	WINEN = OFF, WDT window disabled
  1825   300003                     	org	3145731
  1826   300003  3E                 	db	62
  1827                           
  1828                           ;Config register CONFIG3L @ 0x300004
  1829                           ;	PWM output pins Reset state control
  1830                           ;	PWMPIN = OFF, PWM outputs disabled upon Reset (default)
  1831                           ;	Low-Side Transistors Polarity
  1832                           ;	LPOL = HIGH, PWM0, 2, 4 and 6 are active-high
  1833                           ;	High-Side Transistors Polarity
  1834                           ;	HPOL = HIGH, PWM1, 3, 5 and 7 are active-high
  1835                           ;	Timer1 Oscillator MUX
  1836                           ;	T1OSCMX = ON, Low-power Timer1 operation when microcontroller is in Sleep mode
  1837   300004                     	org	3145732
  1838   300004  3C                 	db	60
  1839                           
  1840                           ;Config register CONFIG3H @ 0x300005
  1841                           ;	FLTA MUX bit
  1842                           ;	FLTAMX = RC1, FLTA input is multiplexed with RC1
  1843                           ;	SSP I/O MUX bit
  1844                           ;	SSPMX = RC7, SCK/SCL clocks and SDA/SDI data are multiplexed with RC5 and RC4, respect
      +                          ively. SDO output is multiplexed with RC7.
  1845                           ;	PWM4 MUX bit
  1846                           ;	PWM4MX = RB5, PWM4 output is multiplexed with RB5
  1847                           ;	TMR0/T5CKI External clock MUX bit
  1848                           ;	EXCLKMX = RC3, TMR0/T5CKI external clock input is multiplexed with RC3
  1849                           ;	MCLR Pin Enable bit
  1850                           ;	MCLRE = ON, Enabled
  1851   300005                     	org	3145733
  1852   300005  9D                 	db	157
  1853                           
  1854                           ;Config register CONFIG4L @ 0x300006
  1855                           ;	Stack Full/Underflow Reset Enable bit
  1856                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1857                           ;	Low-Voltage ICSP Enable bit
  1858                           ;	LVP = ON, Low-voltage ICSP enabled
  1859                           ;	Background Debugger Enable bit
  1860                           ;	DEBUG = 0x1, unprogrammed default
  1861   300006                     	org	3145734
  1862   300006  85                 	db	133
  1863                           
  1864                           ; Padding undefined space
  1865   300007                     	org	3145735
  1866   300007  FF                 	db	255
  1867                           
  1868                           ;Config register CONFIG5L @ 0x300008
  1869                           ;	Code Protection bit
  1870                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  1871                           ;	Code Protection bit
  1872                           ;	CP1 = OFF, Block 1 (001000-001FFF) not code-protected
  1873   300008                     	org	3145736
  1874   300008  0F                 	db	15
  1875                           
  1876                           ;Config register CONFIG5H @ 0x300009
  1877                           ;	Boot Block Code Protection bit
  1878                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1879                           ;	Data EEPROM Code Protection bit
  1880                           ;	CPD = OFF, Data EEPROM not code-protected
  1881   300009                     	org	3145737
  1882   300009  C0                 	db	192
  1883                           
  1884                           ;Config register CONFIG6L @ 0x30000A
  1885                           ;	Write Protection bit
  1886                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  1887                           ;	Write Protection bit
  1888                           ;	WRT1 = OFF, Block 1 (001000-001FFF) not write-protected
  1889   30000A                     	org	3145738
  1890   30000A  0F                 	db	15
  1891                           
  1892                           ;Config register CONFIG6H @ 0x30000B
  1893                           ;	Configuration Register Write Protection bit
  1894                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1895                           ;	Boot Block Write Protection bit
  1896                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1897                           ;	Data EEPROM Write Protection bit
  1898                           ;	WRTD = OFF, Data EEPROM not write-protected
  1899   30000B                     	org	3145739
  1900   30000B  E0                 	db	224
  1901                           
  1902                           ;Config register CONFIG7L @ 0x30000C
  1903                           ;	Table Read Protection bit
  1904                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  1905                           ;	Table Read Protection bit
  1906                           ;	EBTR1 = OFF, Block 1 (001000-001FFF) not protected from table reads executed in other 
      +                          blocks
  1907   30000C                     	org	3145740
  1908   30000C  0F                 	db	15
  1909                           
  1910                           ;Config register CONFIG7H @ 0x30000D
  1911                           ;	Boot Block Table Read Protection bit
  1912                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1913   30000D                     	org	3145741
  1914   30000D  40                 	db	64
  1915                           tosu	equ	0xFFF
  1916                           tosh	equ	0xFFE
  1917                           tosl	equ	0xFFD
  1918                           stkptr	equ	0xFFC
  1919                           pclatu	equ	0xFFB
  1920                           pclath	equ	0xFFA
  1921                           pcl	equ	0xFF9
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           prodh	equ	0xFF4
  1927                           prodl	equ	0xFF3
  1928                           indf0	equ	0xFEF
  1929                           postinc0	equ	0xFEE
  1930                           postdec0	equ	0xFED
  1931                           preinc0	equ	0xFEC
  1932                           plusw0	equ	0xFEB
  1933                           fsr0h	equ	0xFEA
  1934                           fsr0l	equ	0xFE9
  1935                           wreg	equ	0xFE8
  1936                           indf1	equ	0xFE7
  1937                           postinc1	equ	0xFE6
  1938                           postdec1	equ	0xFE5
  1939                           preinc1	equ	0xFE4
  1940                           plusw1	equ	0xFE3
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           bsr	equ	0xFE0
  1944                           indf2	equ	0xFDF
  1945                           postinc2	equ	0xFDE
  1946                           postdec2	equ	0xFDD
  1947                           preinc2	equ	0xFDC
  1948                           plusw2	equ	0xFDB
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         45
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      60
    BANK0           160      0      40
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    Register_Callback@config.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    Register_Callback@config	PTR struct . size(2) Largest target is 8
		 -> FSM_begin@WateringDoneCB_Config(COMRAM[8]), FSM_begin@MoistureCB_Config(COMRAM[8]), 

    Reset_Counter@config.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    Reset_Counter@config	PTR struct . size(2) Largest target is 8
		 -> FSM_begin@WateringDoneCB_Config(COMRAM[8]), FSM_begin@MoistureCB_Config(COMRAM[8]), 

    registered_callbacks.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    WateringDoneCB_Config.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    F2863.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    MoistureCB_Config.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    S666$callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 

    F2860.callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(NULL[0]), Watering_Done_cb(), Check_Moisture_cb(), 


Critical Paths under _main in COMRAM

    _main->_FSM_begin
    _FSM_begin->_Register_Callback
    _Register_Callback->_Reset_Counter

Critical Paths under _timer_overflow_isr in COMRAM

    _timer_overflow_isr->_Callbacks_Manager
    _Watering_Done_cb->i2_set_state
    _Check_Moisture_cb->i2_set_state

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_overflow_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_overflow_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_overflow_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     514
                          _FSM_begin
                        _Timer0_init
                        _Timer0_stop
                          _set_state
 ---------------------------------------------------------------------------------
 (1) _Timer0_stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM_begin                                           18    18      0     499
                                             20 COMRAM    18    18      0
                     _Callbacks_Init
                  _Register_Callback
                       _Timer0_start
       _checking_moisture_status_led
                  _get_current_state
                    _idle_status_led
                          _init_leds
                          _set_state
                _watering_status_led
 ---------------------------------------------------------------------------------
 (2) _watering_status_led                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_state                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_leds                                            2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _idle_status_led                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_current_state                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _checking_moisture_status_led                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer0_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Register_Callback                                    4     2      2     338
                                             16 COMRAM     4     2      2
                      _Reset_Counter
 ---------------------------------------------------------------------------------
 (3) _Reset_Counter                                        2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Callbacks_Init                                       1     1      0      90
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_overflow_isr                                   8     8      0     222
                                              6 COMRAM     8     8      0
                  _Callbacks_Manager
 ---------------------------------------------------------------------------------
 (5) _Callbacks_Manager                                    5     5      0     222
                                              1 COMRAM     5     5      0
                  _Check_Moisture_cb *
                   _Watering_Done_cb *
 ---------------------------------------------------------------------------------
 (6) _Watering_Done_cb                                     0     0      0      22
                i2_get_current_state
                        i2_set_state
 ---------------------------------------------------------------------------------
 (6) _Check_Moisture_cb                                    0     0      0      22
                i2_get_current_state
                        i2_set_state
 ---------------------------------------------------------------------------------
 (7) i2_set_state                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_get_current_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM_begin
     _Callbacks_Init
     _Register_Callback
       _Reset_Counter
     _Timer0_start
     _checking_moisture_status_led
     _get_current_state
     _idle_status_led
     _init_leds
     _set_state
     _watering_status_led
   _Timer0_init
   _Timer0_stop
   _set_state

 _timer_overflow_isr (ROOT)
   _Callbacks_Manager
     _Check_Moisture_cb *
       i2_get_current_state
       i2_set_state
     _Watering_Done_cb *
       i2_get_current_state
       i2_set_state

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      28       4       25.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      3C       1       63.8%
BITBIGSFRllll       2B      0       0      18        0.0%
BITBIGSFRlhl        1E      0       0      15        0.0%
BITBIGSFRhhlh       19      0       0      10        0.0%
BITBIGSFRhhh         D      0       0       9        0.0%
BITBIGSFRhhllll      B      0       0      13        0.0%
BITBIGSFRlllh        7      0       0      17        0.0%
BITBIGSFRlhh         7      0       0      14        0.0%
BITBIGSFRllh         3      0       0      16        0.0%
BITBIGSFRhhlllh      2      0       0      12        0.0%
BITBIGSFRhhllh       1      0       0      11        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      19        0.0%
DATA                 0      0      64      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 23 19:11:30 2023

                                  l60 0478                                    l63 0470  
                                  l57 043E                   __end_ofi2_set_state 046E  
                                 l110 0464                                   l210 0448  
                                 l107 0474                                   l204 03A8  
                                 l213 045C                                   l207 0452  
                                 l161 01A6                                   l170 0334  
                                 l183 0420                                   _ADC 0039  
                                 l188 02E8                                   l905 0476  
                                 l907 0460                                   l909 0472  
                                 l951 038A                                   l961 044A  
                                 l953 03A0                                   l955 03A2  
                                 l963 0440                                   l965 0454  
                                 l957 03A4                                   l949 037A  
                                 l959 03A6                                   u300 02B8  
                                 u301 02B4                                   u311 02D2  
                                 u400 015C                                   u401 0158  
                                 u270 0334                                   u271 0330  
                                 u280 0280                                   u281 027C  
                                 u361 00AC                                   u290 029E  
                                 u291 029A                                   u371 00BE  
                                 u380 0108                                   u381 0104  
                                 u390 0124                                   u447 0136  
                                 u391 0120                                   u457 0394  
                                 prod 000FF3                                   tosl 000FFD  
                                 wreg 000FE8                                  l1011 046E  
                                l1201 00F0                                  l1009 0432  
                                l1211 012C                                  l1203 00F4  
                                l1141 02EE                                  l1213 0142  
                                l1205 010C                                  l1221 016A  
                                l1143 031E                                  l1135 02EA  
                                l1119 040C                                  l1151 0280  
                                l1215 0148                                  l1207 0110  
                                l1145 0322                                  l1153 029E  
                                l1217 0160                                  l1209 0128  
                                l1147 0324                                  l1155 02B8  
                                l1251 03B0                                  l1157 02DA  
                                l1149 0270                                  l1261 03C0  
                                l1253 03B4                                  l1159 02E6  
                                l1271 0180                                  l1191 00C6  
                                l1183 009A                                  l1263 03C2  
                                l1255 03B6                                  l1193 00D2  
                                l1185 009E                                  l1265 03C8  
                                l1257 03B8                                  l1249 03AA  
                                l1195 00DE                                  l1187 00A2  
                                l1259 03BE                                  l1197 00E2  
                                l1189 00B4                                  l1199 00E6  
                                _LATC 000F8B                                  _LATD 000F8C  
                                i2l54 0072                 __end_of_Reset_Counter 0422  
                                _main 03AA                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  fsr1l 000FE1  
                                fsr2l 000FD9                                  btemp 003D  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0096                          ___param_bank 000000  
          Callbacks_Manager@callbacks 0006                                 ?_main 0001  
                               i2l110 046C                                 i2l107 047C  
                               i2l134 03EE                                 i2l138 040A  
                               i2l180 026E                                 _TMR0H 000FD7  
                               _TMR0L 000FD6                                 _TRISC 000F94  
                               _TRISD 000F95                                 pclath 000FFA  
                               pclatu 000FFB                                 tablat 000FF5  
                               plusw1 000FE3                                 plusw2 000FDB  
                               ttemp5 003E                                 ttemp6 0041  
                               ttemp7 0045                                 status 000FD8  
                               wtemp8 003E                       __initialization 0336  
                        __end_of_main 03D4                           i2_set_state 0466  
                 _watering_status_led 0440                                ??_main 0027  
             i2set_state@state_to_set 0001                     _Check_Moisture_cb 03D4  
                       __activetblptr 000002                    ?_Check_Moisture_cb 0001  
                ?_watering_status_led 0001                                _ADRESH 000FC4  
                              _ADRESL 000FC3                   ??_Check_Moisture_cb 0002  
                              i2l1121 047A                                i2l1131 03F0  
                              i2l1125 0468                                i2l1133 0404  
                              i2l1127 03D4                                i2l1231 003E  
                              i2l1129 03E8                                i2l1241 0068  
                              i2l1233 0042                                i2l1171 01C2  
                              i2l1163 01A8                                i2l1243 006C  
                              i2l1235 0052                                i2l1227 002A  
                              i2l1181 025E                                i2l1173 01F8  
                              i2l1245 006E                                i2l1237 0056  
                              i2l1229 002E                                i2l1175 021A  
                              i2l1247 0070                                i2l1239 0064  
                              i2l1177 0232                                i2l1169 01AC  
                              i2l1179 025C                     __end_of_FSM_begin 01A8  
                       ??_Timer0_init 000F                         ??_Timer0_stop 000F  
           __end_of_Check_Moisture_cb 03F0                                clear_0 035C  
                              isa$std 000001                     _Callbacks_Manager 01A8  
                _registered_callbacks 0060                          __pdataCOMRAM 0027  
                  ?_Callbacks_Manager 0001                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
               ??_watering_status_led 000F        FSM_begin@WateringDoneCB_Config 001F  
                 ??_Callbacks_Manager 0002                            __accesstop 0060  
             __end_of__initialization 036C                      _Watering_Done_cb 03F0  
                       ___rparam_used 000001                        __pcstackCOMRAM 0001  
           __end_of_Callbacks_Manager 0270                   __end_of_Timer0_init 0440  
                 __end_of_Timer0_stop 0472            __end_of_timer_overflow_isr 0096  
__end_of_checking_moisture_status_led 045E          _checking_moisture_status_led 0454  
                          __pbssBANK0 0060            FSM_begin@MoistureCB_Config 0017  
                          __pnvCOMRAM 003C                         ?_Timer0_start 0001  
                             i2u32_40 01F8                               i2u32_41 01F4  
                             i2u25_40 03E8                               i2u33_40 021A  
                             i2u41_40 003E                               i2u25_41 03E4  
                             i2u33_41 0216                               i2u41_41 003A  
                             i2u26_40 0404                               i2u42_40 0052  
                             i2u26_41 0400                               i2u42_41 004E  
                             i2u35_40 026E                               i2u34_48 0248  
                             i2u43_40 0064                               i2u35_41 026A  
                             i2u34_49 025C                               i2u43_41 0060  
       ?_checking_moisture_status_led 0001                             _ADCHSbits 000F99  
                             __Hparam 0000                               __Lparam 0000  
                      ??_Timer0_start 000F                           _Timer0_init 0432  
                         _Timer0_stop 046E                          ?i2_set_state 0001  
                             __pcinit 0336                               __ramtop 0300  
                             __ptext0 03AA                               __ptext1 046E  
                             __ptext2 0432                               __ptext3 009A  
                             __ptext4 0440                               __ptext5 045E  
                             __ptext6 037A                               __ptext7 044A  
                             __ptext8 0472                               __ptext9 0454  
                           _T0CONbits 000FD5                     __end_of_init_leds 03AA  
             Register_Callback@config 0011                  end_of_initialization 036C  
                   ??_idle_status_led 000F                         __Lmediumconst 0000  
                   __end_of_set_state 0466                             _FSM_begin 009A  
                           _FSM_state 003C                   fp__Watering_Done_cb 0000  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE              __end_of_Watering_Done_cb 040C  
              Callbacks_Init@callback 000F                         _Reset_Counter 040C  
                          ?_FSM_begin 0001                        _Callbacks_Init 02EA  
                       __pidataCOMRAM 0422           __end_of_watering_status_led 044A  
                 start_initialization 0336                   i2_get_current_state 047A  
                __end_of_Timer0_start 047A                  fp__Check_Moisture_cb 0000  
                  _timer_overflow_isr 0008                        ?_Reset_Counter 000F  
              __end_of_Callbacks_Init 0336                   ?_timer_overflow_isr 0001  
                ?i2_get_current_state 0001                           __pbssCOMRAM 0037  
                ??_timer_overflow_isr 0007                     _Register_Callback 0270  
                     ?_Callbacks_Init 0001                    ?_Register_Callback 0011  
                         ??_FSM_begin 0015                 ??i2_get_current_state 0001  
                        ?_Timer0_init 0001                          ?_Timer0_stop 0001  
                           __pintcode 0008                   ??_Register_Callback 0013  
                     _idle_status_led 044A             __end_of_Register_Callback 02EA  
                           _init_leds 037A                       ??_Reset_Counter 0011  
                            _RCONbits 000FD0                             _set_state 045E  
                          _ADCON0bits 000FC2                            _ADCON1bits 000FC1  
                          _ADCON2bits 000FC0                     ?_Watering_Done_cb 0001  
                 Reset_Counter@config 000F                    ??_Watering_Done_cb 0002  
                          ?_init_leds 0001                           _INTCON2bits 000FF1  
                           copy_data0 034A                              __Hrparam 0000  
                            __Lrparam 0000                            ?_set_state 0001  
                        _Timer0_start 0476               __end_of_idle_status_led 0454  
                          _ANSEL0bits 000FB8                              __ptext10 0476  
                            __ptext11 0270                              __ptext20 0000  
                            __ptext12 040C                              __ptext13 02EA  
                            __ptext15 01A8                              __ptext16 03D4  
                            __ptext17 03F0                              __ptext18 0466  
                            __ptext19 047A                        _callback_count 003B  
                            isa$xinst 000000                     _get_current_state 0472  
                            int$flags 003D                           _tmr0Counter 0037  
                  ?_get_current_state 0001                   ??_get_current_state 000F  
                          _INTCONbits 000FF2                           ??_init_leds 000F  
                    ??_Callbacks_Init 000F                              intlevel2 0000  
           __end_of_get_current_state 0476                            _OSCCONbits 000FD3  
                       ??i2_set_state 0001                           ??_set_state 000F  
      ??_checking_moisture_status_led 000F                      ?_idle_status_led 0001  
               set_state@state_to_set 000F                        FSM_begin@F2860 002F  
                      FSM_begin@F2863 0027           __end_ofi2_get_current_state 047E  
